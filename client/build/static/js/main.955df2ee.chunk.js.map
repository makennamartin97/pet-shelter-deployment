{"version":3,"sources":["components/Dashboard.jsx","components/PetForm.jsx","components/Edit.jsx","components/Pet.jsx","components/About.jsx","App.js","serviceWorker.js","index.js"],"names":["Dashboard","props","useState","pets","setPets","useEffect","axios","get","then","res","console","log","data","catch","err","className","src","alt","map","pet","i","petName","petType","petDesc","petSkills","to","_id","PetForm","setPetName","setPetType","setPetDesc","setPetSkills","errors","setErrors","onSubmit","e","preventDefault","newpet","post","navigate","type","onChange","target","value","properties","message","Edit","updatedpet","put","setPet","onClick","delete","About","class","App","width","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","path","Pet","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"6QAuDeA,EAnDG,SAAAC,GAAU,IAAD,EACCC,mBAAS,IADV,mBAChBC,EADgB,KACVC,EADU,KAcvB,OAHAC,qBAAW,WAPPC,IAAMC,IAAI,kCACLC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZL,EAAQK,EAAIG,SAEfC,OAAM,SAAAC,GAAG,OAAIJ,QAAQC,IAAIG,QAI/B,IAEH,yBAAKC,UAAU,+BACX,yBAAKC,IAAI,iBAAiBC,IAAI,MAAMF,UAAU,cAE9C,yBAAKA,UAAU,OAENZ,EAAKe,KAAK,SAACC,EAAKC,GAAN,OACX,yBAAKL,UAAU,0BAEX,yBAAKA,UAAU,+BACX,yBAAKA,UAAU,8CACVI,EAAIE,SAET,yBAAKN,UAAU,uBACX,oCAAUI,EAAIG,SACd,2CAAiBH,EAAII,SACrB,sCAAYJ,EAAIK,YAGpB,yBAAKT,UAAU,eACX,kBAAC,IAAD,CAAMA,UAAU,iCAAiCU,GAAE,gBAAWN,EAAIO,IAAf,UAAnD,QACA,kBAAC,IAAD,CAAMX,UAAU,kCAAkCU,GAAE,gBAAWN,EAAIO,MAAnE,eAAuFP,EAAIE,QAA3F,cC2BbM,EA9DC,SAAA1B,GAAU,IAAD,EACSC,mBAAS,IADlB,mBACdmB,EADc,KACLO,EADK,OAES1B,mBAAS,IAFlB,mBAEdoB,EAFc,KAELO,EAFK,OAGS3B,mBAAS,IAHlB,mBAGdqB,EAHc,KAGLO,EAHK,OAIa5B,mBAAS,IAJtB,mBAIdsB,EAJc,KAIHO,EAJG,OAKO7B,mBAAS,IALhB,mBAKd8B,EALc,KAKNC,EALM,KAqBrB,OACI,6BACI,0BAAOlB,UAAU,uBAAuBmB,SAhBjC,SAAAC,GACXA,EAAEC,iBACF,IAAMC,EAAS,CAAChB,UAASC,UAASC,UAASC,aAC3ClB,IAAMgC,KAAK,iCAAkCD,GACxC7B,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACTA,EAAIG,KAAKoB,OACRC,EAAUxB,EAAIG,KAAKoB,QAEnBO,YAAS,YAGd1B,OAAM,SAAAC,GAAG,OAAIJ,QAAQC,IAAIG,QAKxB,yBAAKE,IAAI,gBAAgBC,IAAI,MAAMF,UAAU,cAC7C,yBAAKA,UAAU,aACX,yBAAKA,UAAU,8CAAf,qCACA,yBAAKA,UAAU,aACX,yBAAKA,UAAU,cACX,wCACA,2BAAOyB,KAAK,OAAOzB,UAAU,eAAe0B,SAAU,SAAAN,GAAC,OAAIP,EAAWO,EAAEO,OAAOC,UAC7EX,EAAOX,QAAU,uBAAGN,UAAU,eAAeiB,EAAOX,QAAQuB,WAAWC,SAAc,IAG3F,yBAAK9B,UAAU,cACX,wCACA,2BAAOyB,KAAK,OAAOzB,UAAU,eAAe0B,SAAU,SAAAN,GAAC,OAAIN,EAAWM,EAAEO,OAAOC,UAC7EX,EAAOV,QAAU,uBAAGP,UAAU,eAAeiB,EAAOV,QAAQsB,WAAWC,SAAc,IAI3F,yBAAK9B,UAAU,cACX,+CACA,2BAAOyB,KAAK,OAAOzB,UAAU,eAAe0B,SAAU,SAAAN,GAAC,OAAIL,EAAWK,EAAEO,OAAOC,UAC7EX,EAAOT,QAAU,uBAAGR,UAAU,eAAeiB,EAAOT,QAAQqB,WAAWC,SAAc,IAI3F,yBAAK9B,UAAU,cACX,8CACA,2BAAOyB,KAAK,OAAOzB,UAAU,eAAe0B,SAAU,SAAAN,GAAC,OAAIJ,EAAaI,EAAEO,OAAOC,YAGzF,2BAAOH,KAAK,SAASzB,UAAU,uBAAuB4B,MAAM,aCoBjEG,EAxEF,SAAA7C,GAAU,IAAD,EACYC,mBAAS,IADrB,mBACXmB,EADW,KACFO,EADE,OAEY1B,mBAAS,IAFrB,mBAEXoB,EAFW,KAEFO,EAFE,OAGY3B,mBAAS,IAHrB,mBAGXqB,EAHW,KAGFO,EAHE,OAIgB5B,mBAAS,IAJzB,mBAIXsB,EAJW,KAIAO,EAJA,OAKU7B,mBAAS,IALnB,mBAKX8B,EALW,KAKHC,EALG,KAOlB5B,qBAAW,WACPC,IAAMC,IAAN,yCAA4CN,EAAMyB,MAC7ClB,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZmB,EAAWnB,EAAIG,KAAKS,SACpBQ,EAAWpB,EAAIG,KAAKU,SACpBQ,EAAWrB,EAAIG,KAAKW,SACpBQ,EAAatB,EAAIG,KAAKY,cACvBX,OAAM,SAAAmB,GAAM,OAAItB,QAAQC,IAAIqB,QACpC,CAAC/B,EAAMyB,MAeV,OACI,6BACA,0BAAOX,UAAU,uBAAuBmB,SAhB5B,SAAAC,GACZA,EAAEC,iBACF,IAAMW,EAAa,CAAC1B,UAASC,UAASC,UAASC,aAC/ClB,IAAM0C,IAAN,yCAA4C/C,EAAMyB,KAAOqB,GACpDvC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACTA,EAAIG,KAAKoB,OACRC,EAAUxB,EAAIG,KAAKoB,QAEnBO,YAAS,YAEd1B,OAAM,SAAAC,GAAG,OAAIJ,QAAQC,IAAIG,QAM5B,yBAAKC,UAAU,aACX,yBAAKA,UAAU,8CAAf,YACA,yBAAKA,UAAU,aACX,yBAAKA,UAAU,cACX,wCACA,2BAAOyB,KAAK,OAAOzB,UAAU,eAAe0B,SAAU,SAAAN,GAAC,OAAIP,EAAWO,EAAEO,OAAOC,QAAQA,MAAOtB,IAC5FW,EAAOX,QAAU,uBAAGN,UAAU,eAAeiB,EAAOX,QAAQuB,WAAWC,SAAc,IAG3F,yBAAK9B,UAAU,cACX,wCACA,2BAAOyB,KAAK,OAAOzB,UAAU,eAAe0B,SAAU,SAAAN,GAAC,OAAIN,EAAWM,EAAEO,OAAOC,QAAQA,MAAOrB,IAC5FU,EAAOV,QAAU,uBAAGP,UAAU,eAAeiB,EAAOV,QAAQsB,WAAWC,SAAc,IAI3F,yBAAK9B,UAAU,cACX,+CACA,2BAAOyB,KAAK,OAAOzB,UAAU,eAAe0B,SAAU,SAAAN,GAAC,OAAIL,EAAWK,EAAEO,OAAOC,QAAQA,MAAOpB,IAC5FS,EAAOT,QAAU,uBAAGR,UAAU,eAAeiB,EAAOT,QAAQqB,WAAWC,SAAc,IAI3F,yBAAK9B,UAAU,cACX,8CACA,2BAAOyB,KAAK,OAAOzB,UAAU,eAAe0B,SAAU,SAAAN,GAAC,OAAIJ,EAAaI,EAAEO,OAAOC,QAAQA,MAAOnB,MAIxG,2BAAOgB,KAAK,SAASzB,UAAU,uBAAuB4B,MAAM,eC/D7D,WAAA1C,GAAU,IAAD,EAEEC,mBAAS,IAFX,mBAEbiB,EAFa,KAER8B,EAFQ,KAGpB5C,qBAAU,WACNC,IAAMC,IAAI,kCAAoCN,EAAMyB,KAC/ClB,MAAK,SAAAC,GAAG,OAAIwC,EAAOxC,EAAIG,WAC7B,IAcH,OACI,yBAAKG,UAAU,wBACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,8CAAf,UACaI,EAAIE,SAEjB,yBAAKN,UAAU,kBACX,oCAAWI,EAAIG,SACf,2CAAkBH,EAAII,SACtB,sCAAYJ,EAAIK,YAEpB,yBAAKT,UAAU,mBACX,kBAAC,IAAD,CAAMA,UAAU,6BAA6BU,GAAI,SAAWN,EAAIO,IAAM,SAAtE,QACA,4BAAQX,UAAU,8BAA8BmC,QAAS,SAACf,GAAchB,EAAIO,IAxBxFpB,IAAM6C,OAAN,yCAA+ClD,EAAMyB,MAChDlB,MAAK,SAAAC,GACFH,IAAMC,IAAI,kCACLC,MAAM,SAAAC,GACHwC,EAAOxC,EAAIG,MACX2B,YAAS,YAEZ1B,OAAM,SAAAC,GAAG,OAAIJ,QAAQC,IAAIG,WAiB1B,SAA0FK,EAAIE,QAA9F,SChBL+B,EAnBD,SAAAnD,GACV,OACI,oCACI,yBAAKoD,MAAM,qCACP,yBAAKrC,IAAI,mBAAmBD,UAAU,wBAAyBE,IAAI,YAEnE,yBAAKoC,MAAM,YAAX,eACA,wBAAIA,MAAM,yCAAV,kEAIJ,wBAAItC,UAAU,6BAAd,YACA,wBAAIA,UAAU,oBAAd,gKCiCGuC,MApCf,WACE,OACE,6BACE,yBAAKvC,UAAU,kDACb,yBAAKA,UAAU,MAAMC,IAAI,mBAAmBuC,MAAM,OAAOtC,IAAI,QAC7D,kBAAC,IAAD,CAAMF,UAAU,qCAAqCU,GAAG,KAAxD,kBACA,4BAAQV,UAAU,iBAAiByB,KAAK,SAASgB,cAAY,WAAWC,cAAY,qBAAqBC,gBAAc,qBAAqBC,gBAAc,QAAQC,aAAW,qBAC3K,0BAAM7C,UAAU,yBAElB,yBAAKA,UAAU,2BAA2B8C,GAAG,qBAC3C,yBAAK9C,UAAU,cACb,wBAAIsC,MAAM,YACR,uBAAGA,MAAM,iCAAiCS,KAAK,KAA/C,aAEF,wBAAIT,MAAM,YACR,uBAAGA,MAAM,0BAA0BS,KAAK,SAAxC,gBAEF,wBAAIT,MAAM,YACR,uBAAGA,MAAM,0BAA0BS,KAAK,aAAxC,kBAMR,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAWC,KAAK,UAChB,kBAAC,EAAD,CAASA,KAAK,cACd,kBAAC,EAAD,CAAMA,KAAK,oBACX,kBAACC,EAAD,CAAKD,KAAK,eACV,kBAAC,EAAD,CAAOA,KAAK,SC7BAE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrE,MAAK,SAAAsE,GACJA,EAAaC,gBAEdlE,OAAM,SAAAmE,GACLtE,QAAQsE,MAAMA,EAAMnC,c","file":"static/js/main.955df2ee.chunk.js","sourcesContent":["import { Link, navigate, Router} from '@reach/router';\nimport React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nconst Dashboard = props => {\n    const [pets, setPets] = useState([]);\n    \n    const getPets = () => {\n        axios.get(\"http://localhost:8000/api/pets\")\n            .then(res => {\n                console.log(res)\n                setPets(res.data);\n            })\n            .catch(err => console.log(err));\n    }\n    useEffect( () => {\n        getPets();\n    }, []);\n    return(\n    <div className=\"container-fluid text-center\">\n        <img src=\"img/doggos.png\" alt=\"paw\" className=\"img-fluid\"/>\n\n        <div className=\"row\">\n            \n                {pets.map( (pet, i) => \n                <div className=\"col-sm-6 col-md-4 mb-4\">\n                    \n                    <div className=\"card mt-3 h-100 border-info\">\n                        <div className=\"card-header bg-info text-light text-center\">\n                            {pet.petName}\n                        </div>\n                        <div className=\"card-body text-left\">\n                            <p>Type: {pet.petType}</p>\n                            <p>Description: {pet.petDesc}</p>\n                            <p>Skills: {pet.petSkills}</p>\n\n                        </div>\n                        <div className=\"text-center\">\n                            <Link className=\"btn btn-success float-left m-3\" to={`/pets/${pet._id}/edit`}>Edit</Link>\n                            <Link className=\"btn btn-success float-right m-3\" to={`/pets/${pet._id}`}>Get to Know {pet.petName} </Link>\n                        </div>\n                    \n                        \n                        \n                    </div>\n                </div>\n                )}\n       \n     \n\n        </div>\n    </div>\n    )\n\n}\nexport default Dashboard;","import { Link, navigate, Router} from '@reach/router';\nimport React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nconst PetForm = props => {\n    const [petName, setPetName] = useState(\"\");\n    const [petType, setPetType] = useState(\"\");\n    const [petDesc, setPetDesc] = useState(\"\");\n    const [petSkills, setPetSkills] = useState(\"\");\n    const [errors, setErrors] = useState({});\n\n    const addPet = e => {\n        e.preventDefault();\n        const newpet = {petName, petType, petDesc, petSkills};\n        axios.post(\"http://localhost:8000/api/pets\", newpet)\n            .then(res =>{\n                console.log(res);\n                if(res.data.errors){\n                    setErrors(res.data.errors)\n                }else{\n                    navigate(\"/pets\");\n                }\n                \n            }).catch(err => console.log(err));\n    }\n    return(\n        <div>\n            <form  className=\"col-sm-8 offset-sm-2\" onSubmit={addPet} >\n                <img src=\"/img/cat2.png\" alt=\"cat\" className=\"img-fluid\"/>\n                <div className=\"card mt-3\">\n                    <div className=\"card-header bg-info text-light text-center\">Do you know a pet needing a home?</div>\n                    <div className=\"card-body\">\n                        <div className=\"form-group\">\n                            <label>Name:</label>\n                            <input type=\"text\" className=\"form-control\" onChange={e => setPetName(e.target.value)} />\n                            { errors.petName ? <p className=\"text-danger\">{errors.petName.properties.message}</p>: \"\" }\n\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Type:</label>\n                            <input type=\"text\" className=\"form-control\" onChange={e => setPetType(e.target.value)} />\n                            { errors.petType ? <p className=\"text-danger\">{errors.petType.properties.message}</p>: \"\" }\n                          \n\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Description:</label>\n                            <input type=\"text\" className=\"form-control\" onChange={e => setPetDesc(e.target.value)} />\n                            { errors.petDesc ? <p className=\"text-danger\">{errors.petDesc.properties.message}</p>: \"\" }\n\n\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Any skills?</label>\n                            <input type=\"text\" className=\"form-control\" onChange={e => setPetSkills(e.target.value)} />\n                        </div>\n                    </div>\n                    <input type=\"submit\" className=\"btn btn-success mt-4\" value=\"Post\" />\n\n                </div>\n            </form>\n\n        </div>\n    )\n\n}\nexport default PetForm;","import React, {useState, useEffect} from 'react';\nimport { Link, navigate } from '@reach/router';\nimport axios from 'axios';\n\n\nconst Edit = props => {\n    const [petName, setPetName] = useState(\"\");\n    const [petType, setPetType] = useState(\"\");\n    const [petDesc, setPetDesc] = useState(\"\");\n    const [petSkills, setPetSkills] = useState(\"\");\n    const [errors, setErrors] = useState({});\n\n    useEffect( () => {\n        axios.get(`http://localhost:8000/api/pets/${props._id}`)\n            .then(res => {\n                console.log(res);\n                setPetName(res.data.petName);\n                setPetType(res.data.petType);\n                setPetDesc(res.data.petDesc);\n                setPetSkills(res.data.petSkills);\n            }).catch(errors => console.log(errors));\n    }, [props._id]);\n    const editPet = e => {\n        e.preventDefault();\n        const updatedpet = {petName, petType, petDesc, petSkills};\n        axios.put(`http://localhost:8000/api/pets/${props._id}`, updatedpet)\n            .then(res => {\n                console.log(res);\n                if(res.data.errors) {\n                    setErrors(res.data.errors);\n                } else {\n                    navigate(\"/pets\");\n                }\n            }).catch(err => console.log(err));\n    }\n\n    return(\n        <div>\n        <form  className=\"col-sm-8 offset-sm-2\" onSubmit={editPet} >\n            <div className=\"card mt-3\">\n                <div className=\"card-header bg-info text-light text-center\">Edit Pet</div>\n                <div className=\"card-body\">\n                    <div className=\"form-group\">\n                        <label>Name:</label>\n                        <input type=\"text\" className=\"form-control\" onChange={e => setPetName(e.target.value)} value={petName} />\n                        { errors.petName ? <p className=\"text-danger\">{errors.petName.properties.message}</p>: \"\" }\n\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Type:</label>\n                        <input type=\"text\" className=\"form-control\" onChange={e => setPetType(e.target.value)} value={petType}/>\n                        { errors.petType ? <p className=\"text-danger\">{errors.petType.properties.message}</p>: \"\" }\n                      \n\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Description:</label>\n                        <input type=\"text\" className=\"form-control\" onChange={e => setPetDesc(e.target.value)} value={petDesc}/>\n                        { errors.petDesc ? <p className=\"text-danger\">{errors.petDesc.properties.message}</p>: \"\" }\n\n\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Any skills?</label>\n                        <input type=\"text\" className=\"form-control\" onChange={e => setPetSkills(e.target.value)} value={petSkills} />\n\n                    </div>\n                </div>\n                <input type=\"submit\" className=\"btn btn-success mt-4\" value=\"Update\" />\n\n            </div>\n        </form>\n\n    </div>\n\n    )\n}\nexport default Edit;","import React, {useState, useEffect} from 'react';\nimport { Link, navigate } from '@reach/router';\nimport axios from 'axios';\n\n\nexport default props => {\n\n    const [pet, setPet] = useState({})\n    useEffect(() => {\n        axios.get(\"http://localhost:8000/api/pets/\" + props._id)\n            .then(res => setPet(res.data))\n    }, [])\n\n    const adoptPet = (_id) => {\n        axios.delete(`http://localhost:8000/api/pets/${props._id}`)\n            .then(res => {\n                axios.get(\"http://localhost:8000/api/pets\")\n                    .then( res => {\n                        setPet(res.data);\n                        navigate(\"/pets\")\n                    })\n                    .catch(err => console.log(err));\n            })\n    }\n\n    return(\n        <div className=\"col-sm-6 offset-sm-3\">\n            <div className=\"card m-2\">\n                <div className=\"card-header bg-info text-white text-center\">\n                    About: { pet.petName } \n                </div>\n                <div className=\"card-body mn-4\">\n                    <p>Type: { pet.petType }</p>\n                    <p>Description: { pet.petDesc }</p>\n                    <p>Skills: {pet.petSkills}</p>\n                </div>\n                <div className=\"text-center m-2\">\n                    <Link className=\"btn btn-warning float-left\" to={\"/pets/\" + pet._id + \"/edit\"}>Edit</Link>\n                    <button className=\"btn btn-success float-right\" onClick={(e)=>{adoptPet(pet._id)}}>Adopt {pet.petName}!</button>\n                </div>\n\n            </div>  \n        </div>\n\n    )\n}\n","import React from 'react';\n\n\nconst About = props => {\n    return(\n        <>\n            <div class=\"container-fluid about text-center\">\n                <img src=\"/img/kittens.png\" className=\"img-fluid text-center\"  alt=\"kittens\"/>\n                \n                <div class=\"centered\">Our Mission</div>\n                <h6 class=\"text-warning mission text-center ml-2\">Helping animals find the loving home they deserve since 1985 </h6>\n                \n         \n            </div>\n            <h3 className=\"text-center text-info m-3\">About Us</h3>\n            <h5 className=\"text-center mb-5\">We are a no-kill shelter solely operating off of donations. We believe every animal deserves a loving home and make sure every adoption is a perfect fit. </h5>\n\n            \n        </>\n    )\n\n}\nexport default About;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Link, Router} from '@reach/router';\nimport Dashboard from './components/Dashboard';\nimport PetForm from './components/PetForm';\nimport Edit from './components/Edit';\nimport Pet from './components/Pet';\nimport About from './components/About';\n\n\n\nfunction App() {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-warning\">\n        <img className=\"m-2\" src=\"/img/dog-paw.png\" width=\"18px\" alt=\"paw\"/>\n        <Link className=\"navbar-brand text-success m-2 lead\" to=\"/\">petshelter.com</Link>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\n          <div className=\"navbar-nav\">\n            <li class=\"nav-item\">\n              <a class=\"nav-link text-info lead active\" href=\"/\">About Us</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link text-info lead\" href=\"/pets\">Our Buddies</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link text-info lead\" href=\"/pets/new\">Post a Pet</a>\n            </li>\n\n          </div>\n        </div>\n      </nav>\n      <Router>\n        <Dashboard path=\"/pets\"/>\n        <PetForm path=\"/pets/new\"/>\n        <Edit path=\"/pets/:_id/edit\"/>\n        <Pet path=\"/pets/:_id\"/>\n        <About path=\"/\"/>\n      </Router>\n    </div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}